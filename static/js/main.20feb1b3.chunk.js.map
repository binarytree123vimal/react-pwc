{"version":3,"sources":["components/userList.js","App.js","services/index.js","config/index.js","reportWebVitals.js","index.js"],"names":["UserList","props","isLoading","filterUser","colSpan","length","map","userData","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","App","useState","user","setUser","setFilterUser","setIsLoading","searchTerm","setSearchTerm","useEffect","axios","get","then","response","data","resp","className","type","placeholder","value","onChange","event","searchKeyword","target","trim","filterResult","filter","elem","toLowerCase","includes","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0BeA,MAxBf,SAAkBC,GACd,IAAQC,EAA0BD,EAA1BC,UAAWC,EAAeF,EAAfE,WACnB,OACI,kCACKD,GACG,6BACI,oBAAIE,QAAQ,IAAI,aAAW,SAA3B,uCAENF,GAAaC,GAAoC,IAAtBA,EAAWE,QACpC,6BACI,oBAAID,QAAQ,IAAI,aAAW,SAA3B,gCAGPD,GAAcA,EAAWE,OAAS,GAAKF,EAAWG,KAAI,SAAAC,GAAQ,OAAI,+BAC/D,6BAAKA,EAASC,KACd,6BAAKD,EAASE,OACd,6BAAKF,EAASG,WACd,6BAAKH,EAASI,QACd,+BAAKJ,EAASK,QAAQC,OAAtB,IAA+BN,EAASK,QAAQE,MAAhD,IAAwDP,EAASK,QAAQG,KAAzE,KAAiFR,EAASK,QAAQI,QAAlG,KAA6GT,EAASK,QAAQK,IAAIC,IAAlI,IAAwIX,EAASK,QAAQK,IAAIE,IAA7J,SALwEZ,EAASC,W,MCgElFY,MA1Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,mBAAS,IAA7C,mBAAOlB,EAAP,KAAmBqB,EAAnB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOnB,EAAP,KAAkBuB,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAwCA,OAtCAC,qBAAU,WCNDC,IAAMC,IAAN,UCJE,yBDIF,eACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QDMrBF,MAAK,SAACG,GACdX,EAAQW,GACRV,EAAcU,GACdT,GAAa,QAEd,IAiCD,8BACE,sBAAKU,UAAU,UAAf,UACE,2CACA,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLC,YAAY,SACZC,MAAOZ,EACPa,SAvCW,SAAAC,GACnBf,GAAa,GACb,IAAMgB,EAAgBD,EAAME,OAAOJ,MAAMK,OAEzC,GADAhB,EAAca,EAAME,OAAOJ,OACL,KAAlBG,EAAsB,CACxB,IAAIG,EAAe,GACnBtB,EAAKuB,QAAO,SAACC,IAETA,EAAKtC,IAAMiC,GACXK,EAAKrC,KAAKsC,cAAcC,SAASP,EAAcM,gBAC/CD,EAAKpC,SAASqC,cAAcC,SAASP,EAAcM,gBACnDD,EAAKnC,MAAMoC,cAAcC,SAASP,EAAcM,gBAChDD,EAAKlC,QAAQC,OAAOkC,cAAcC,SAASP,EAAcM,gBACzDD,EAAKlC,QAAQE,MAAMiC,cAAcC,SAASP,EAAcM,gBACxDD,EAAKlC,QAAQG,KAAKgC,cAAcC,SAASP,EAAcM,gBACvDD,EAAKlC,QAAQI,QAAQ+B,cAAcC,SAASP,EAAcM,gBAC1DD,EAAKlC,QAAQK,IAAIC,IAAI8B,SAASP,IAC9BK,EAAKlC,QAAQK,IAAIE,IAAI6B,SAASP,KAE9BG,EAAaK,KAAKH,MAGtBtB,EAAcoB,GACdnB,GAAa,QAEbD,EAAcF,GACdG,GAAa,QAgBX,kCACE,+BACE,mCACA,sCACA,0CACA,uCACA,4CAEF,cAAC,EAAD,CACAtB,WAAYA,EACZD,UAAWA,aG3DNgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20feb1b3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction UserList(props) {\n    const { isLoading, filterUser } = props;\n    return (\n        <tbody>\n            {isLoading &&\n                <tr>\n                    <td colSpan=\"5\" text-align=\"center\">Loading please wait...</td>\n                </tr>}\n            {!isLoading && filterUser && filterUser.length === 0 &&\n                <tr>\n                    <td colSpan=\"5\" text-align=\"center\">No data found...</td>\n                </tr>\n            }\n            {filterUser && filterUser.length > 0 && filterUser.map(userData => <tr key={userData.id}>\n                <td>{userData.id}</td>\n                <td>{userData.name}</td>\n                <td>{userData.username}</td>\n                <td>{userData.email}</td>\n                <td>{userData.address.street} {userData.address.suite},{userData.address.city}, {userData.address.zipcode} ({userData.address.geo.lat},{userData.address.geo.lng})</td>\n            </tr>)}\n        </tbody>\n    );\n}\n\nexport default UserList;\n","import React, { useState, useEffect } from \"react\";\nimport { getUser } from './services/index.js';\nimport UserList from \"./components/userList.js\";\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState([]);\n  const [filterUser, setFilterUser] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getUser().then((resp) => {\n      setUser(resp);\n      setFilterUser(resp);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setIsLoading(true);\n    const searchKeyword = event.target.value.trim();\n    setSearchTerm(event.target.value);\n    if (searchKeyword !== '') {\n      let filterResult = [];\n      user.filter((elem) => {\n        if (\n          elem.id == searchKeyword ||\n          elem.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.username.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.email.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.address.street.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.address.suite.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.address.city.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.address.zipcode.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n          elem.address.geo.lat.includes(searchKeyword) ||\n          elem.address.geo.lng.includes(searchKeyword)\n        ) {\n          filterResult.push(elem);\n        }\n      });\n      setFilterUser(filterResult);\n      setIsLoading(false);\n    } else {\n      setFilterUser(user);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <h2>User List</h2>\n        <div className=\"searchTerm\">\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            value={searchTerm}\n            onChange={handleChange}\n          />\n        </div>\n        <table>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Address</th>\n          </tr>\n          <UserList \n          filterUser={filterUser}\n          isLoading={isLoading}\n          />\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\"\nimport config from \"../config\"\nconst baseUrl = config.BASE_URL;\n\nexport const getUser = () => {\n    return axios.get(`${baseUrl}users/list`)\n        .then(response => response.data)\n}","export default {\n    BASE_URL: `http://localhost:8000/`\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}